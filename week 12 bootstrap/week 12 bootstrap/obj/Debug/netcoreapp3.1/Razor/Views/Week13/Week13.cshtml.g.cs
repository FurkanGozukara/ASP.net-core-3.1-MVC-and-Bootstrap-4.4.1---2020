#pragma checksum "C:\Users\Furkan Gözükara\Desktop\responsive web mvc 2020\week 12 bootstrap\week 12 bootstrap\Views\Week13\Week13.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7a3820a1b6ccd4e37cc277ec9b4f412b346b4466"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Week13_Week13), @"mvc.1.0.view", @"/Views/Week13/Week13.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a3820a1b6ccd4e37cc277ec9b4f412b346b4466", @"/Views/Week13/Week13.cshtml")]
    public class Views_Week13_Week13 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/customCSS/week13.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a3820a1b6ccd4e37cc277ec9b4f412b346b44663634", async() => {
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Week13</title>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7a3820a1b6ccd4e37cc277ec9b4f412b346b44663990", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a3820a1b6ccd4e37cc277ec9b4f412b346b44665876", async() => {
                WriteLiteral(@"
    <div class=""card mb-3"" style=""max-width: 540px;"">
        <div class=""row no-gutters"">
            <div class=""col-md-4"">
                <img src=""http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/128/42483-houses-icon.png"" class=""card-img"" alt=""..."">
            </div>
            <div class=""col-md-8"">
                <div class=""card-body"">
                    <h5 class=""card-title"">Card title</h5>
                    <p class=""card-text"">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    <p class=""card-text""><small class=""text-muted"">Last updated 3 mins ago</small></p>
                </div>
            </div>
        </div>
    </div>

    <div class=""card bg-dark text-white w-25"">
        <img src=""http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/128/42483-houses-icon.png"" class=""card-img"" alt=""..."">
        <div class=""card-img-overlay"">
     ");
                WriteLiteral(@"       <h5 class=""card-title"">Card title</h5>
            <p class=""card-text"">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
            <p class=""card-text"">Last updated 3 mins ago</p>
        </div>
    </div>

    <div class=""card text-center"">
        <div class=""card-header"">
            <ul class=""nav nav-tabs card-header-tabs"">
                <li class=""nav-item"">
                    <a class=""nav-link active"" href=""#"">Active</a>
                </li>
                <li class=""nav-item"">
                    <a class=""nav-link"" href=""#"">Link</a>
                </li>
                <li class=""nav-item"">
                    <a class=""nav-link disabled"" href=""#"" tabindex=""-1"" aria-disabled=""true"">Disabled</a>
                </li>
            </ul>
        </div>
        <div class=""card-body"">
            <h5 class=""card-title"">Special title treatment</h5>
            <p class=""card-text"">With ");
                WriteLiteral(@"supporting text below as a natural lead-in to additional content.</p>
            <a href=""#"" class=""btn btn-primary"">Go somewhere</a>
        </div>
    </div>

    <div class=""card w-75"">
        <div class=""card-body"">
            <h5 class=""card-title"">Card title</h5>
            <p class=""card-text"">With supporting text below as a natural lead-in to additional content.</p>
            <a href=""#"" class=""btn btn-primary"">Button</a>
        </div>
    </div>

    <div class=""card w-50"">
        <div class=""card-body"">
            <h5 class=""card-title"">Card title</h5>
            <p class=""card-text"">With supporting text below as a natural lead-in to additional content.</p>
            <a href=""#"" class=""btn btn-primary"">Button</a>
        </div>
    </div>

    <div class=""row"">
        <div class=""col-sm-6"">
            <div class=""card"">
                <div class=""card-body"">
                    <h5 class=""card-title"">Special title treatment</h5>
                    <p class=""");
                WriteLiteral(@"card-text"">With supporting text below as a natural lead-in to additional content.</p>
                    <a href=""#"" class=""btn btn-primary"">Go somewhere</a>
                </div>
            </div>
        </div>
        <div class=""col-sm-6"">
            <div class=""card"">
                <div class=""card-body"">
                    <h5 class=""card-title"">Special title treatment</h5>
                    <p class=""card-text"">With supporting text below as a natural lead-in to additional content.</p>
                    <a href=""#"" class=""btn btn-primary"">Go somewhere</a>
                </div>
            </div>
        </div>
    </div>

    <div class=""card"">
        <h5 class=""card-header"">Featured</h5>
        <div class=""card-body"">
            <h5 class=""card-title"">Special title treatment</h5>
            <p class=""card-text"">With supporting text below as a natural lead-in to additional content.</p>
            <a href=""#"" class=""btn btn-primary"">Go somewhere</a>
        </div>
");
                WriteLiteral(@"    </div>

    <div class=""card"" style=""width: 18rem;"">
        <div class=""card-body"">
            <h5 class=""card-title"">Card title</h5>
            <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
            <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            <a href=""#"" class=""card-link"">Card link</a>
            <a href=""#"" class=""card-link"">Another link</a>
        </div>
    </div>

    <div class=""card"" style=""width: 18rem;"">
        <img src=""http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/32/42483-houses-icon.png"" class=""card-img-top"" alt=""..."">
        <div class=""card-body"">
            <h5 class=""card-title"">Card title</h5>
            <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            <a href=""#"" class=""btn btn-primary"">Go somewhere</a>
        </div>
    </div>

    <div class=""btn-g");
                WriteLiteral(@"roup"" role=""group"" aria-label=""Button group with nested dropdown"">
        <button type=""button"" class=""btn btn-secondary"">1</button>
        <button type=""button"" class=""btn btn-secondary"">2</button>

        <div class=""btn-group"" role=""group"">
            <button id=""btnGroupDrop1"" type=""button"" class=""btn btn-secondary dropdown-toggle"" data-toggle=""dropdown"" aria-haspopup=""false"" aria-expanded=""true"">
                Dropdown
            </button>
            <div class=""dropdown-menu"" aria-labelledby=""btnGroupDrop1"">
                <a class=""dropdown-item"" href=""#"">Dropdown link</a>
                <a class=""dropdown-item"" href=""#"">Dropdown link</a>
            </div>
        </div>
    </div>


    <div class=""btn-group"" role=""group"" aria-label=""Button group with nested dropdown"">
        <button type=""button"" class=""btn btn-secondary"">1</button>
        <button type=""button"" class=""btn btn-secondary"">2</button>

        <div class=""btn-group"" role=""group"">
            <button id=""");
                WriteLiteral(@"btnGroupDrop1"" type=""button"" class=""btn btn-secondary dropdown-toggle"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                Dropdown
            </button>
            <div class=""dropdown-menu"" aria-labelledby=""btnGroupDrop1"">
                <a class=""dropdown-item"" href=""#"">Dropdown link</a>
                <a class=""dropdown-item"" href=""#"">Dropdown link</a>
            </div>
        </div>
    </div>

    <div class=""btn-group btn-group-toggle"" data-toggle=""buttons"">
        <label class=""btn btn-secondary active"">
            <input type=""radio"" name=""options"" id=""option1"" checked> Active
        </label>
        <label class=""btn btn-secondary"">
            <input type=""radio"" name=""options"" id=""option2""> Radio
        </label>
        <label class=""btn btn-secondary"">
            <input type=""radio"" name=""options"" id=""option3""> Radio
        </label>
    </div>



    <button type=""button"" class=""btn btn-primary"" data-toggle=""button"" aria-pressed=""f");
                WriteLiteral(@"alse"">
        Single toggle
    </button>

    <button type=""button"" class=""btn btn-primary btn-lg"">Large button</button>
    <button type=""button"" class=""btn btn-secondary btn-lg"">Large button</button>

    <button type=""button"" class=""btn btn-primary btn-sm d-block"">Large button</button>
    <button type=""button"" class=""btn btn-secondary btn-lg btn-block"">Large button</button>

    <button type=""button"" class=""btn btn-primary"">Primary</button>
    <button type=""button"" class=""btn btn-secondary"">Secondary</button>
    <button type=""button"" class=""btn btn-success"">Success</button>
    <button type=""button"" class=""btn btn-danger"">Danger</button>
    <button type=""button"" class=""btn btn-warning"">Warning</button>
    <button type=""button"" class=""btn btn-info"">Info</button>
    <button type=""button"" class=""btn btn-light"">Light</button>
    <button type=""button"" class=""btn btn-dark"">Dark</button>

    <button type=""button"" class=""btn btn-link"">Link</button>

    <nav aria-label=""breadcrumb"">");
                WriteLiteral(@"
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item active"" aria-current=""page"">Home</li>
        </ol>
    </nav>

    <nav aria-label=""breadcrumb"">
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item""><a href=""#"">Home</a></li>
            <li class=""breadcrumb-item active"" aria-current=""page"">Library</li>
        </ol>
    </nav>

    <nav aria-label=""breadcrumb"">
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item""><a href=""#"">Home</a></li>
            <li class=""breadcrumb-item""><a href=""#"">Library</a></li>
            <li class=""breadcrumb-item active"" aria-current=""page"">Data</li>
        </ol>
    </nav>

    <button title=""unread messages"" type=""button"" class=""btn btn-primary"">
        Profile <span class=""badge badge-light"">9</span>
        <span class=""sr-only"">unread messages</span>
    </button>

    <button type=""button"" class=""btn btn-primary"">
        Notifications <span class=""badge badge-light"">4</span>
    <");
                WriteLiteral(@"/button>

    <h1>Example heading <span class=""badge badge-light"">New</span></h1>
    <h2>Example heading <span class=""badge badge-pill"">New</span></h2>
    <h3>Example heading <span class=""badge badge-success"">New</span></h3>
    <h4>Example heading <span class=""badge badge-secondary"">New</span></h4>
    <h5>Example heading <span class=""badge badge-secondary"">New</span></h5>
    <h6>Example heading <span class=""badge badge-secondary"">New</span></h6>

    <div id=""myalert"" class=""alert alert-warning alert-dismissible fade show"" role=""alert"">
        <strong>Holy guacamole!</strong> You should check in on some of those fields below.
        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
            <span aria-hidden=""true"">&times;</span>
        </button>
    </div>



    <div class=""alert alert-success"" role=""alert"">
        <h4 class=""alert-heading"">Well done!</h4>
        <p>Aww yeah, you successfully read this important alert message. This example text is ");
                WriteLiteral(@"going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>
        <hr>
        <p class=""mb-0"">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>
    </div>

    <div class=""alert alert-primary alert-dismissible fade show"" role=""alert"">
        A simple primary alert with <a href=""#"">an example link</a>. Give it a click if you like.
        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
            <span aria-hidden=""true"">&times;</span>
        </button>
    </div>
    <div class=""alert alert-primary"" role=""alert"">
        A simple primary alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-secondary"" role=""alert"">
        A simple secondary alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-success"" role=""alert"">
  ");
                WriteLiteral(@"      A simple success alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-danger"" role=""alert"">
        A simple danger alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-warning"" role=""alert"">
        A simple warning alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-info"" role=""alert"">
        A simple info alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-light"" role=""alert"">
        A simple light alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>
    <div class=""alert alert-dark"" role=""alert"">
        A simple dark alert with <a href=""#"" class=""alert-link"">an example link</a>. Give it a click if you like.
    </div>

  ");
                WriteLiteral(@"  <div class=""alert"" role=""alert"">
        A simple   alert—check it out!
    </div>
    <div class=""alert alert-primary"" role=""alert"">
        A simple primary alert—check it out!
    </div>
    <div class=""alert alert-secondary"" role=""alert"">
        A simple secondary alert—check it out!
    </div>
    <div class=""alert alert-success"" role=""alert"">
        A simple success alert—check it out!
    </div>
    <div class=""alert alert-danger"" role=""alert"">
        A simple danger alert—check it out!
    </div>
    <div class=""alert alert-warning"" role=""alert"">
        A simple warning alert—check it out!
    </div>
    <div class=""alert alert-info"" role=""alert"">
        A simple info alert—check it out!
    </div>
    <div class=""alert alert-light"" role=""alert"">
        A simple light alert—check it out!
    </div>
    <div class=""alert alert-dark"" role=""alert"">
        A simple dark alert—check it out!
    </div>


    <figure class=""figure"">
        <img src=""http://icons.iconar");
                WriteLiteral(@"chive.com/icons/google/noto-emoji-travel-places/72/42483-houses-icon.png"" class=""figure-img img-fluid rounded"" alt=""..."">
        <figcaption class=""figure-caption text-center"">A caption for the above image.</figcaption>
    </figure>

    <table class=""table table-hover table-responsive"">
        <thead class=""thead-dark"">
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope=""row"">1</th>
                <td>Mark  First  First First First First First First First First First</td>
                <td>Otto</td>
                <td>");
                WriteLiteral("@mdo</td>\r\n                <td>Mark  First  First First First First First First First First First</td>\r\n                <td>Otto</td>\r\n                <td>");
                WriteLiteral("@mdo</td>\r\n                <td>Otto</td>\r\n                <td>");
                WriteLiteral("@mdo</td>\r\n                <td>Mark  First  First First First First First First First First First</td>\r\n                <td>Otto</td>\r\n                <td>");
                WriteLiteral("@mdo</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>");
                WriteLiteral("@fat</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>Larry</td>\r\n                <td>the Bird</td>\r\n                <td>");
                WriteLiteral(@"@twitter</td>
            </tr>
        </tbody>
    </table>

    <table class=""table table-hover table-dark"">
        <thead class=""thead-dark"">
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope=""row"">1</th>
                <td>Mark  First  First First First First First First First First First</td>
                <td>Otto</td>
                <td>");
                WriteLiteral("@mdo</td>\r\n                <td>Mark  First  First First First First First First First First First</td>\r\n                <td>Otto</td>\r\n                <td>");
                WriteLiteral("@mdo</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>");
                WriteLiteral("@fat</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>Larry</td>\r\n                <td>the Bird</td>\r\n                <td>");
                WriteLiteral(@"@twitter</td>
            </tr>
        </tbody>
    </table>

    <table class=""table"">
        <thead class=""thead-light"">
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope=""row"">1</th>
                <td>Mark</td>
                <td>Otto</td>
                <td>");
                WriteLiteral("@mdo</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>");
                WriteLiteral("@fat</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>Larry</td>\r\n                <td>the Bird</td>\r\n                <td>");
                WriteLiteral(@"@twitter</td>
            </tr>
        </tbody>
    </table>

    <table>
        <thead>
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope=""row"">1</th>
                <td>Mark</td>
                <td>Otto</td>
                <td>");
                WriteLiteral("@mdo</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>");
                WriteLiteral("@fat</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>Larry</td>\r\n                <td>the Bird</td>\r\n                <td>");
                WriteLiteral(@"@twitter</td>
            </tr>
        </tbody>
    </table>

    <table class=""table table-dark"">
        <thead>
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">First</th>
                <th scope=""col"">Last</th>
                <th scope=""col"">Handle</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope=""row"">1</th>
                <td>Mark Mark MarkMark Mark Mark Mark Mark Mark </td>
                <td>Otto</td>
                <td>");
                WriteLiteral("@mdo</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>");
                WriteLiteral("@fat</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>Larry</td>\r\n                <td>the Bird</td>\r\n                <td>");
                WriteLiteral(@"@twitter</td>
            </tr>
        </tbody>
    </table>

    ​<picture>
        <source media=""(min-width: 950px)"" srcset=""http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/512/42483-houses-icon.png"" type=""image/png"">
        <img media=""(min-width: 250px)"" src=""http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/72/42483-houses-icon.png"" class=""img-fluid img-thumbnail"" alt=""..."">
    </picture>

    <div>
        test  <img src=""http://icons.iconarchive.com/icons/google/noto-emoji-travel-places/72/42483-houses-icon.png"" alt=""..."">
    </div>

    <div>
        <img src=""https://www.toros.edu.tr/dosya/242/resim/2018-05-21-IMG_5287.JPG"" style=""max-height:100px"" class=""rounded float-left img-fluid"" alt=""..."">
        <img src=""https://www.toros.edu.tr/dosya/242/resim/2018-05-21-IMG_5287.JPG"" style=""max-height:100px"" class=""rounded float-right img-fluid"" alt=""..."">
    </div>
    <img src=""https://www.toros.edu.tr/dosya/242/resim/2018-05-21-IMG_5287.JPG"" al");
                WriteLiteral("t=thumbnail image\" class=\"img-thumbnail\">\r\n\r\n");
                WriteLiteral(@"
    <img src=""https://www.toros.edu.tr/dosya/242/resim/2018-05-21-IMG_5287.JPG"" class=""img-fluid"" alt=""Responsive image"">

    <samp class=""d-block"">This text is meant to be treated as sample output from a computer program.</samp>

    To switch directories, type <kbd>cd</kbd> followed by the name of the directory.<br>
    To edit settings, press <kbd><kbd>ctrl</kbd> + <kbd>,</kbd></kbd>

    <pre><code>
        &lt;p&gt;Sample text here...&lt;/p&gt;
&lt;p&gt;And another line of sample text here...&lt;/p&gt;
</code></pre>

    For example, <code>&lt;section&gt;</code> should be wrapped as inline.

    <dl class=""row"">
        <dt class=""col-sm-3"">Description lists</dt>
        <dd class=""col-sm-9"">A description list is perfect for defining terms.</dd>

        <dt class=""col-sm-3"">Euismod</dt>
        <dd class=""col-sm-9"">
            <p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p>
            <p>Donec id elit non mi porta gravida at eget metus.</p");
                WriteLiteral(@">
        </dd>

        <dt class=""col-sm-3"">Malesuada porta</dt>
        <dd class=""col-sm-9"">Etiam porta sem malesuada magna mollis euismod.</dd>

        <dt class=""col-sm-3 text-truncate"">Truncated term is truncated</dt>
        <dd class=""col-sm-9"">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>

        <dt class=""col-sm-3"">Nesting</dt>
        <dd class=""col-sm-9"">
            <dl class=""row"">
                <dt class=""col-sm-4"">Nested definition list</dt>
                <dd class=""col-sm-8"">Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.</dd>
            </dl>
        </dd>
    </dl>

    <ul class=""list-inline"">
        <li class=""list-inline-item"">Lorem ipsum 1</li>
        <li class=""list-inline-item"">Phasellus iaculis 2</li>
        <li class=""list-inline-item"">Nulla volutpat 3</li>
        <li class=""list-inline-item"">Lorem ipsum 4</li>
        <li class=""list-inline-item"">Phasellu");
                WriteLiteral(@"s iaculis 5</li>
        <li class=""list-inline-item"">Nulla volutpat 6</li>
    </ul>

    <ul class=""list-unstyled"">
        <li>Lorem ipsum dolor sit amet</li>
        <li>Consectetur adipiscing elit</li>
        <li>Integer molestie lorem at massa</li>
        <li>Facilisis in pretium nisl aliquet</li>
        <li>
            Nulla volutpat aliquam velit
            <ul>
                <li>Phasellus iaculis neque</li>
                <li>Purus sodales ultricies</li>
                <li>Vestibulum laoreet porttitor sem</li>
                <li>Ac tristique libero volutpat at</li>
            </ul>
        </li>
        <li>Faucibus porta lacus fringilla vel</li>
        <li>Aenean sit amet erat nunc</li>
        <li>Eget porttitor lorem</li>
    </ul>

    <ul>
        <li>Lorem ipsum dolor sit amet</li>
        <li>Consectetur adipiscing elit</li>
        <li>Integer molestie lorem at massa</li>
        <li>Facilisis in pretium nisl aliquet</li>
        <li>
            Nulla");
                WriteLiteral(@" volutpat aliquam velit
            <ul>
                <li>Phasellus iaculis neque</li>
                <li>Purus sodales ultricies</li>
                <li>Vestibulum laoreet porttitor sem</li>
                <li>Ac tristique libero volutpat at</li>
            </ul>
        </li>
        <li>Faucibus porta lacus fringilla vel</li>
        <li>Aenean sit amet erat nunc</li>
        <li>Eget porttitor lorem</li>
    </ul>

    <blockquote class=""blockquote"">
        <p class=""mb-0"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
        <footer class=""blockquote-footer"">Someone famous in <cite title=""Source Title"">Source Title</cite></footer>
    </blockquote>

    <blockquote class=""blockquote"">
        <p class=""mb-0"">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
    </blockquote>

    <p>You can use the mark tag to <mark>highlight</mark> text.</p>
    <p><del>This line of text is meant to be trea");
                WriteLiteral(@"ted as deleted text.</del></p>
    <p><s>This line of text is meant to be treated as no longer accurate.</s></p>
    <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>
    <p><u>This line of text will render as underlined</u></p>
    <p><small>This line of text is meant to be treated as fine print.</small></p>
    <p><strong>This line rendered as bold text.</strong></p>
    <p><em>This line rendered as italicized text.</em></p>

    <p class=""lead"">
        Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.
    </p>

    <p>
        Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.
    </p>

    <h1>Display 1</h1>

    <h1 class=""display-1"">Display 1</h1>
    <h1 class=""display-2"">Display 2</h1>
    <h1 class=""display-3"">Display 3</h1>
    <h1 class=""display-4"">Display 4</h1>

    <h3>
        Fancy display heading
        <small cl");
                WriteLiteral(@"ass=""text-muted"">With faded secondary text</small>
    </h3>

    <p class=""text-muted"">
        Muted text with a <a href=""#"" class=""text-reset"">reset link</a>  <a href=""#"">reset link</a>.
    </p>
    <p class=""text-monospace"">This is in monospace</p>
    <p class=""font-weight-bold"">Bold text. </p>
    <p class=""font-weight-bolder"">Bolder weight text (relative to the parent element).</p>
    <p class=""font-weight-normal"">Normal weight text.</p>
    <p class=""font-weight-light"">Light weight text.</p>
    <p class=""font-weight-lighter"">Lighter weight text (relative to the parent element).</p>
    <p class=""font-italic"">Italic text.</p>

    <p class=""text-lowercase"">LowercaSed ŞĞÜÖİ text.</p>
    <p class=""text-uppercase"">Uppercased şçıüu text.</p>
    <p class=""text-capitalize"">CapiTaliZed text.</p>

    <p class=""text-break"">
        mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
    </p>

    <!-- Block level -->
    <div class=""r");
                WriteLiteral(@"ow"">
        <div class=""col-2 text-truncate"">
            Praeterea iter est quasdam res quas ex communi.
        </div>
    </div>

    <!-- Inline level -->
    <span class=""d-inline-block text-truncate"" style=""max-width: 150px;"">
        Praeterea iter est quasdam res quas ex communi.
    </span>

    <div class=""text-nowrap bd-highlight"" style=""width: 8rem;"">
        This text should overflow the parent.
    </div>

    <div class=""badge badge-primary text-wrap"" style=""width: 50px;"">
        This text should wrap.
    </div>

    <div class=""badge badge-primary"" style=""width: 50px;"">
        This text not wrap.
    </div>

    <p class=""text-left"">Left aligned text on all viewport sizes.</p>
    <p class=""text-center"">Center aligned text on all viewport sizes.</p>
    <p class=""text-right"">Right aligned text on all viewport sizes.</p>

    <p class=""text-sm-right"">right aligned text on viewports sized SM (small) or wider.</p>
    <p class=""text-md-left"">Left aligned text on vi");
                WriteLiteral(@"ewports sized MD (medium) or wider.</p>
    <p class=""text-lg-center"">center aligned text on viewports sized LG (large) or wider.</p>
    <p class=""text-xl-left"">Left aligned text on viewports sized XL (extra-large) or wider.</p>

    <p class=""text-justify"">Ambitioni dedisse scripsisse iudicaretur. Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus. Praeterea iter est quasdam res quas ex communi. At nos hinc posthac, sitientis piros Afros. Petierunt uti sibi concilium totius Galliae in diem certam indicere. Cras mattis iudicium purus sit amet fermentum.</p>

    <div hidden>
        ,
        this will tkae 0 space
    </div>

    <div class=""bd-example m-4 border-danger border p-3"">
        <details>
            <summary>Some details</summary>
            <p>More info about the details.</p>
            <p> 2 More info about the details.</p>
        </details>

        <details");
                BeginWriteAttribute("open", " open=\"", 28566, "\"", 28573, 0);
                EndWriteAttribute();
                WriteLiteral(@">
            <summary>Even more details</summary>
            <p>Here are even more details about the details.</p>
            <p> 2 More info about the details.</p>
        </details>
    </div>


    <div class=""bd-example"">
        <blockquote class=""blockquote"">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
            <footer>Someone famous in <cite title=""Source Title"">Source Title</cite></footer>
        </blockquote>
    </div>

    <div class=""bd-example"">
        <address>
            <strong>Twitter, Inc.</strong><br />
            1355 Market St, Suite 900<br />
            San Francisco, CA 94103<br />
            <abbr title=""Phone"">P:</abbr> (123) 456-7890
        </address>

        <address>
            <strong>Full Name</strong><br />
            <a href=""mailto:first.last@example.com"">first.last@example.com</a>
        </address>
    </div>

    <div class=""parentDivFlex d-flex"">
        <div class=""ch");
                WriteLiteral(@"ildrenFlexExample p-5"">
            div 1

        </div>
        <div class=""childrenFlexExample"">
            <h2> div 2</h2>

        </div>
        <div class=""childrenFlexExample invisible"">

            this is taking space
        </div>
        <div class=""childrenFlexExample d-none"">

            this one dont take space
        </div>
        <div class=""childrenFlexExample"">
            <ol>
                <li>item 1</li>
                <li>item 2</li>
                <li>item 3</li>
            </ol>
            <dl>
                <dt>Coffee</dt>
                <dd>Black hot drink</dd>
                <dt>Milk</dt>
                <dd>White cold drink</dd>
            </dl>
        </div>
    </div>
    <div class=""parentDivFlex"">
        <dl>
            <dt>Coffee</dt>
            <dd>Black hot drink</dd>
            <dt>Milk</dt>
            <dd>White cold drink</dd>
        </dl>
        <pre>example pre format </pre>
    </div>

    <form class=""bd");
                WriteLiteral(@"-example"">
        <fieldset>
            <legend>Example legend</legend>

            <p>
                <label for=""input"">Example input</label>
                <input type=""text"" id=""input"" placeholder=""Example input"" />
            </p>

            <p>
                <label for=""select"">Example select</label>
                <select id=""select"">
                    <option");
                BeginWriteAttribute("value", " value=\"", 31016, "\"", 31024, 0);
                EndWriteAttribute();
                WriteLiteral(">Choose...</option>\r\n                    <optgroup label=\"Option group 1\">\r\n                        <option");
                BeginWriteAttribute("value", " value=\"", 31132, "\"", 31140, 0);
                EndWriteAttribute();
                WriteLiteral(">Option 1</option>\r\n                        <option");
                BeginWriteAttribute("value", " value=\"", 31192, "\"", 31200, 0);
                EndWriteAttribute();
                WriteLiteral(">Option 2</option>\r\n                        <option");
                BeginWriteAttribute("value", " value=\"", 31252, "\"", 31260, 0);
                EndWriteAttribute();
                WriteLiteral(">Option 3</option>\r\n                    </optgroup>\r\n                    <optgroup label=\"Option group 2\">\r\n                        <option");
                BeginWriteAttribute("value", " value=\"", 31400, "\"", 31408, 0);
                EndWriteAttribute();
                WriteLiteral(">Option 4</option>\r\n                        <option");
                BeginWriteAttribute("value", " value=\"", 31460, "\"", 31468, 0);
                EndWriteAttribute();
                WriteLiteral(">Option 5</option>\r\n                        <option");
                BeginWriteAttribute("value", " value=\"", 31520, "\"", 31528, 0);
                EndWriteAttribute();
                WriteLiteral(">Option 6</option>\r\n                    </optgroup>\r\n                </select>\r\n            </p>\r\n\r\n            <p>\r\n                <label>\r\n                    <input type=\"checkbox\" class=\"checkbox-1x\"");
                BeginWriteAttribute("value", " value=\"", 31733, "\"", 31741, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n                    Check this checkbox\r\n                </label>\r\n            </p>\r\n\r\n            <p>\r\n                <label>\r\n                    <input type=\"radio\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\"");
                BeginWriteAttribute("checked", " checked=\"", 31972, "\"", 31982, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                    Option one is this and that
                </label>
                <label>
                    <input type=""radio"" name=""optionsRadios"" id=""optionsRadios2"" value=""option2"" />
                    Option two is something else that's also super long to demonstrate the wrapping of these fancy form controls.
                </label>
                <label>
                    <input type=""radio"" name=""optionsRadios"" id=""optionsRadios3"" value=""option3""");
                BeginWriteAttribute("disabled", " disabled=\"", 32467, "\"", 32478, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                    Option three is disabled
                </label>
            </p>

            <p>
                <label for=""textarea"">Example textarea</label>
                <textarea id=""textarea"" rows=""3""></textarea>
            </p>

            <p>
                <label for=""date"">Example date</label>
                <input type=""date"" id=""date"" />
            </p>

            <p>
                <label for=""time"">Example time</label>
                <input type=""time"" id=""time"" />
            </p>

            <p>
                <label for=""output"">Example output</label>
                <output name=""result"" id=""output"">100</output>
            </p>

            <p>
                <button type=""submit"">Button submit</button>
                <input type=""submit"" value=""Input submit button"" />
                <input type=""reset"" value=""Input reset button"" />
                <input type=""button"" value=""Input button"" />
            </p>

            <p>
     ");
                WriteLiteral("           <button type=\"submit\"");
                BeginWriteAttribute("disabled", " disabled=\"", 33535, "\"", 33546, 0);
                EndWriteAttribute();
                WriteLiteral(">Button submit</button>\r\n                <input type=\"submit\" value=\"Input submit button\"");
                BeginWriteAttribute("disabled", " disabled=\"", 33636, "\"", 33647, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n                <input type=\"reset\" value=\"Input reset button\"");
                BeginWriteAttribute("disabled", " disabled=\"", 33715, "\"", 33726, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n                <input type=\"button\" value=\"Input button\"");
                BeginWriteAttribute("disabled", " disabled=\"", 33789, "\"", 33800, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n            </p>\r\n        </fieldset>\r\n    </form>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<script>\r\n    $(\'#myalert\').on(\'closed.bs.alert\', function () {\r\n        alert(\'closed done\');\r\n    });\r\n</script>\r\n\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
